/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace AndrewKalotayAssociates {

using System;
using System.Runtime.InteropServices;

class AkaApiPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("bondoas_csharp_wrap", EntryPoint="SWIGRegisterExceptionCallbacks_AkaApi")]
    public static extern void SWIGRegisterExceptionCallbacks_AkaApi(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("bondoas_csharp_wrap", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_AkaApi")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_AkaApi(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_AkaApi(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_AkaApi(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(AkaApiPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(AkaApiPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("bondoas_csharp_wrap", EntryPoint="SWIGRegisterStringCallback_AkaApi")]
    public static extern void SWIGRegisterStringCallback_AkaApi(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_AkaApi(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static AkaApiPINVOKE() {
  }


  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Status")]
  public static extern IntPtr new_Status();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Status")]
  public static extern void delete_Status(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_Error")]
  public static extern int Status_Error(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_WarningCount")]
  public static extern int Status_WarningCount(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_Warning")]
  public static extern int Status_Warning(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_ErrorString__SWIG_0")]
  public static extern string Status_ErrorString__SWIG_0(int jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_ErrorString__SWIG_1")]
  public static extern string Status_ErrorString__SWIG_1(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_WarningString")]
  public static extern string Status_WarningString(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Status_Clear")]
  public static extern void Status_Clear(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Initialization__SWIG_0")]
  public static extern IntPtr new_Initialization__SWIG_0();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Initialization__SWIG_1")]
  public static extern IntPtr new_Initialization__SWIG_1(int jarg1, string jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Initialization__SWIG_2")]
  public static extern IntPtr new_Initialization__SWIG_2(string jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Initialization")]
  public static extern void delete_Initialization(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_ShutdownAutomatically")]
  public static extern void Initialization_ShutdownAutomatically(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_Shutdown")]
  public static extern void Initialization_Shutdown();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_Authorize__SWIG_0")]
  public static extern int Initialization_Authorize__SWIG_0(HandleRef jarg1, int jarg2, string jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_Authorize__SWIG_1")]
  public static extern int Initialization_Authorize__SWIG_1(HandleRef jarg1, string jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_Authorize__SWIG_2")]
  public static extern int Initialization_Authorize__SWIG_2(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_Expiration")]
  public static extern IntPtr Initialization_Expiration(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_Version")]
  public static extern double Initialization_Version();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_VersionString")]
  public static extern string Initialization_VersionString();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_InterestRateModel__SWIG_0")]
  public static extern IntPtr new_InterestRateModel__SWIG_0(int jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_InterestRateModel__SWIG_1")]
  public static extern IntPtr new_InterestRateModel__SWIG_1();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_InterestRateModel")]
  public static extern void delete_InterestRateModel(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_InterestRateModel__SWIG_2")]
  public static extern IntPtr new_InterestRateModel__SWIG_2(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_InterestRateModel__SWIG_3")]
  public static extern IntPtr new_InterestRateModel__SWIG_3(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SetRate")]
  public static extern bool InterestRateModel_SetRate(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SetFactor")]
  public static extern bool InterestRateModel_SetFactor(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SetZeroRate")]
  public static extern bool InterestRateModel_SetZeroRate(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_RemovePoint")]
  public static extern void InterestRateModel_RemovePoint(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_RemoveAllPoints")]
  public static extern void InterestRateModel_RemoveAllPoints(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetRate")]
  public static extern double InterestRateModel_GetRate(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetFactor")]
  public static extern double InterestRateModel_GetFactor(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_ZeroToFactor")]
  public static extern double InterestRateModel_ZeroToFactor(double jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_FactorToZero")]
  public static extern double InterestRateModel_FactorToZero(double jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SetVolatility")]
  public static extern bool InterestRateModel_SetVolatility(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetVolatility__SWIG_0")]
  public static extern double InterestRateModel_GetVolatility__SWIG_0(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SetAlpha")]
  public static extern bool InterestRateModel_SetAlpha(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetAlpha")]
  public static extern double InterestRateModel_GetAlpha(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SetLongVolatility")]
  public static extern bool InterestRateModel_SetLongVolatility(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetLongVolatility")]
  public static extern double InterestRateModel_GetLongVolatility(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetInputType")]
  public static extern int InterestRateModel_GetInputType(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_IsParCurve")]
  public static extern bool InterestRateModel_IsParCurve(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_Solve")]
  public static extern int InterestRateModel_Solve(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_Discount__SWIG_0")]
  public static extern double InterestRateModel_Discount__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_Discount__SWIG_1")]
  public static extern double InterestRateModel_Discount__SWIG_1(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_GetVolatility__SWIG_1")]
  public static extern double InterestRateModel_GetVolatility__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_EnableCompatibility")]
  public static extern void InterestRateModel_EnableCompatibility(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Bond__SWIG_0")]
  public static extern IntPtr new_Bond__SWIG_0(string jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Bond")]
  public static extern void delete_Bond(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Bond__SWIG_1")]
  public static extern IntPtr new_Bond__SWIG_1(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetDaycount")]
  public static extern bool Bond_SetDaycount(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetFrequency")]
  public static extern bool Bond_SetFrequency(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetRedemptionPrice")]
  public static extern bool Bond_SetRedemptionPrice(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetIssuePrice")]
  public static extern bool Bond_SetIssuePrice(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetFaceAmount__SWIG_0")]
  public static extern bool Bond_SetFaceAmount__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetFaceAmount__SWIG_1")]
  public static extern bool Bond_SetFaceAmount__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetFirstCoupon")]
  public static extern bool Bond_SetFirstCoupon(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetLastCoupon")]
  public static extern bool Bond_SetLastCoupon(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetPayDayEndOfMonth")]
  public static extern bool Bond_SetPayDayEndOfMonth(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetPayDay")]
  public static extern bool Bond_SetPayDay(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetYieldMethod")]
  public static extern bool Bond_SetYieldMethod(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetCall")]
  public static extern bool Bond_SetCall(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetPut")]
  public static extern bool Bond_SetPut(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetSink__SWIG_0")]
  public static extern bool Bond_SetSink__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetSink__SWIG_1")]
  public static extern bool Bond_SetSink__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetCoupon")]
  public static extern bool Bond_SetCoupon(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetXCouponDays")]
  public static extern bool Bond_SetXCouponDays(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_RemoveCall")]
  public static extern void Bond_RemoveCall(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_RemovePut")]
  public static extern void Bond_RemovePut(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_RemoveSink")]
  public static extern void Bond_RemoveSink(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_RemoveCoupon")]
  public static extern void Bond_RemoveCoupon(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetNoticePeriod")]
  public static extern bool Bond_SetNoticePeriod(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetOptionDelay")]
  public static extern bool Bond_SetOptionDelay(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetCallAmerican")]
  public static extern bool Bond_SetCallAmerican(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetPutAmerican")]
  public static extern bool Bond_SetPutAmerican(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetSinkOption")]
  public static extern bool Bond_SetSinkOption(HandleRef jarg1, bool jarg2, double jarg3, int jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetCouponSchedulePeriod")]
  public static extern bool Bond_SetCouponSchedulePeriod(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetNotifyBehavior")]
  public static extern int Bond_SetNotifyBehavior(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetBusinessDayWeekends")]
  public static extern bool Bond_SetBusinessDayWeekends(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetHoliday")]
  public static extern bool Bond_SetHoliday(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetHolidays")]
  public static extern bool Bond_SetHolidays(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_ClearHolidays")]
  public static extern bool Bond_ClearHolidays(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetMortgage")]
  public static extern bool Bond_SetMortgage(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetAmortization")]
  public static extern bool Bond_SetAmortization(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SetMortgageRefinanceCost")]
  public static extern bool Bond_SetMortgageRefinanceCost(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_ClearMortgage")]
  public static extern void Bond_ClearMortgage(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetName")]
  public static extern string Bond_GetName(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetInitialDate")]
  public static extern IntPtr Bond_GetInitialDate(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetMaturityDate")]
  public static extern IntPtr Bond_GetMaturityDate(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetCoupon")]
  public static extern double Bond_GetCoupon(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetDaycount")]
  public static extern int Bond_GetDaycount(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetFrequency")]
  public static extern int Bond_GetFrequency(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_GetFaceAmount")]
  public static extern double Bond_GetFaceAmount(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Duration")]
  public static extern IntPtr new_Duration(double jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Duration_duration_set")]
  public static extern void Duration_duration_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Duration_duration_get")]
  public static extern double Duration_duration_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Duration_convexity_set")]
  public static extern void Duration_convexity_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Duration_convexity_get")]
  public static extern double Duration_convexity_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Duration")]
  public static extern void delete_Duration(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_redeemed_set")]
  public static extern void ScenarioAnalysis_redeemed_set(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_redeemed_get")]
  public static extern int ScenarioAnalysis_redeemed_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_flowwhen_set")]
  public static extern void ScenarioAnalysis_flowwhen_set(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_flowwhen_get")]
  public static extern int ScenarioAnalysis_flowwhen_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_efficiency_set")]
  public static extern void ScenarioAnalysis_efficiency_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_efficiency_get")]
  public static extern double ScenarioAnalysis_efficiency_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_reinvestment_set")]
  public static extern void ScenarioAnalysis_reinvestment_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_reinvestment_get")]
  public static extern double ScenarioAnalysis_reinvestment_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_redeemstring__SWIG_0")]
  public static extern string ScenarioAnalysis_redeemstring__SWIG_0(int jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ScenarioAnalysis_redeemstring__SWIG_1")]
  public static extern string ScenarioAnalysis_redeemstring__SWIG_1(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ScenarioAnalysis")]
  public static extern IntPtr new_ScenarioAnalysis();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_ScenarioAnalysis")]
  public static extern void delete_ScenarioAnalysis(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Quote_quote_set")]
  public static extern void Quote_quote_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Quote_quote_get")]
  public static extern double Quote_quote_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Quote_quotetype_set")]
  public static extern void Quote_quotetype_set(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Quote_quotetype_get")]
  public static extern int Quote_quotetype_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Quote")]
  public static extern IntPtr new_Quote(double jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Quote")]
  public static extern void delete_Quote(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Value__SWIG_1")]
  public static extern IntPtr new_Value__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Value__SWIG_2")]
  public static extern IntPtr new_Value__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Value__SWIG_3")]
  public static extern IntPtr new_Value__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Value__SWIG_4")]
  public static extern IntPtr new_Value__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Value__SWIG_5")]
  public static extern IntPtr new_Value__SWIG_5(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Value__SWIG_6")]
  public static extern IntPtr new_Value__SWIG_6(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Value")]
  public static extern void delete_Value(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Reset__SWIG_0")]
  public static extern int Value_Reset__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Reset__SWIG_1")]
  public static extern int Value_Reset__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Reset__SWIG_2")]
  public static extern int Value_Reset__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Reset__SWIG_3")]
  public static extern int Value_Reset__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Reset__SWIG_4")]
  public static extern int Value_Reset__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Reset__SWIG_5")]
  public static extern int Value_Reset__SWIG_5(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_BadValue_get")]
  public static extern double Value_BadValue_get();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_FlowCount")]
  public static extern int Value_FlowCount(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_FlowType__SWIG_0")]
  public static extern int Value_FlowType__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_FlowType__SWIG_1")]
  public static extern bool Value_FlowType__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_FirstFlow")]
  public static extern int Value_FirstFlow(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_FlowDate")]
  public static extern IntPtr Value_FlowDate(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YearsTo")]
  public static extern double Value_YearsTo(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Interest")]
  public static extern double Value_Interest(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Principal")]
  public static extern double Value_Principal(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PrincipalPrice")]
  public static extern double Value_PrincipalPrice(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Accrued__SWIG_0")]
  public static extern double Value_Accrued__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_CallPrice")]
  public static extern double Value_CallPrice(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PutPrice")]
  public static extern double Value_PutPrice(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_BondName")]
  public static extern string Value_BondName(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Accrued__SWIG_1")]
  public static extern double Value_Accrued__SWIG_1(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_AccruedDays")]
  public static extern int Value_AccruedDays(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_AccruedOn")]
  public static extern double Value_AccruedOn(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_SetYieldMethod")]
  public static extern bool Value_SetYieldMethod(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_GetYieldMethod")]
  public static extern int Value_GetYieldMethod(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToCall")]
  public static extern double Value_YieldToCall(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToPut")]
  public static extern double Value_YieldToPut(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToMaturity")]
  public static extern double Value_YieldToMaturity(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToWorst__SWIG_0")]
  public static extern double Value_YieldToWorst__SWIG_0(HandleRef jarg1, double jarg2, bool jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToWorst__SWIG_1")]
  public static extern double Value_YieldToWorst__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToWorst__SWIG_2")]
  public static extern double Value_YieldToWorst__SWIG_2(HandleRef jarg1, double jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToWorst__SWIG_3")]
  public static extern double Value_YieldToWorst__SWIG_3(HandleRef jarg1, double jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_WeightedAverageMaturity")]
  public static extern double Value_WeightedAverageMaturity(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_ModifiedDuration")]
  public static extern IntPtr Value_ModifiedDuration(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToFlow__SWIG_0")]
  public static extern double Value_YieldToFlow__SWIG_0(HandleRef jarg1, int jarg2, double jarg3, bool jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_YieldToFlow__SWIG_1")]
  public static extern double Value_YieldToFlow__SWIG_1(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_ModifiedDurationToFlow")]
  public static extern IntPtr Value_ModifiedDurationToFlow(HandleRef jarg1, int jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_ytm2price")]
  public static extern double Value_ytm2price(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_ytc2price")]
  public static extern double Value_ytc2price(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_ytp2price")]
  public static extern double Value_ytp2price(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Price__SWIG_0")]
  public static extern double Value_Price__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Price__SWIG_1")]
  public static extern double Value_Price__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_OAS__SWIG_0")]
  public static extern double Value_OAS__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_OAS__SWIG_1")]
  public static extern double Value_OAS__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_OptionValue__SWIG_0")]
  public static extern double Value_OptionValue__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_OptionValue__SWIG_1")]
  public static extern double Value_OptionValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PriceToFlow__SWIG_0")]
  public static extern double Value_PriceToFlow__SWIG_0(HandleRef jarg1, int jarg2, double jarg3, bool jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PriceToFlow__SWIG_1")]
  public static extern double Value_PriceToFlow__SWIG_1(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PriceToWorst__SWIG_0")]
  public static extern double Value_PriceToWorst__SWIG_0(HandleRef jarg1, double jarg2, bool jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PriceToWorst__SWIG_1")]
  public static extern double Value_PriceToWorst__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PriceToWorst__SWIG_2")]
  public static extern double Value_PriceToWorst__SWIG_2(HandleRef jarg1, double jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_PriceToWorst__SWIG_3")]
  public static extern double Value_PriceToWorst__SWIG_3(HandleRef jarg1, double jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_EffectiveDuration__SWIG_0")]
  public static extern IntPtr Value_EffectiveDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_EffectiveDuration__SWIG_1")]
  public static extern IntPtr Value_EffectiveDuration__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_EffectiveDuration__SWIG_2")]
  public static extern IntPtr Value_EffectiveDuration__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_EffectiveDuration__SWIG_3")]
  public static extern IntPtr Value_EffectiveDuration__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_UpDuration__SWIG_0")]
  public static extern double Value_UpDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_UpDuration__SWIG_1")]
  public static extern double Value_UpDuration__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_DownDuration__SWIG_0")]
  public static extern double Value_DownDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_DownDuration__SWIG_1")]
  public static extern double Value_DownDuration__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_UpDuration__SWIG_2")]
  public static extern double Value_UpDuration__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_UpDuration__SWIG_3")]
  public static extern double Value_UpDuration__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_DownDuration__SWIG_2")]
  public static extern double Value_DownDuration__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_DownDuration__SWIG_3")]
  public static extern double Value_DownDuration__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_KeyRateDuration__SWIG_0")]
  public static extern IntPtr Value_KeyRateDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_KeyRateDuration__SWIG_1")]
  public static extern IntPtr Value_KeyRateDuration__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_KeyRateDuration__SWIG_2")]
  public static extern IntPtr Value_KeyRateDuration__SWIG_2(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_KeyRateDuration__SWIG_3")]
  public static extern IntPtr Value_KeyRateDuration__SWIG_3(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_KeyRateDuration__SWIG_4")]
  public static extern IntPtr Value_KeyRateDuration__SWIG_4(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_KeyRateDuration__SWIG_5")]
  public static extern IntPtr Value_KeyRateDuration__SWIG_5(HandleRef jarg1, HandleRef jarg2, double jarg3, double jarg4, double jarg5, double jarg6);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Discount__SWIG_0")]
  public static extern double Value_Discount__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_Discount__SWIG_1")]
  public static extern double Value_Discount__SWIG_1(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_GetRate")]
  public static extern double Value_GetRate(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_GetFactor")]
  public static extern double Value_GetFactor(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_AnalyzeScenario__SWIG_0")]
  public static extern bool Value_AnalyzeScenario__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_AnalyzeScenario__SWIG_1")]
  public static extern bool Value_AnalyzeScenario__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_AssetSwapSpread")]
  public static extern double Value_AssetSwapSpread(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_ISpread")]
  public static extern double Value_ISpread(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_SinkingFundStatus_outstanding_set")]
  public static extern void SinkingFundStatus_outstanding_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_SinkingFundStatus_outstanding_get")]
  public static extern double SinkingFundStatus_outstanding_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_SinkingFundStatus_accumulation_set")]
  public static extern void SinkingFundStatus_accumulation_set(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_SinkingFundStatus_accumulation_get")]
  public static extern double SinkingFundStatus_accumulation_get(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_SinkingFundStatus__SWIG_0")]
  public static extern IntPtr new_SinkingFundStatus__SWIG_0(uint jarg1, uint jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_SinkingFundStatus__SWIG_1")]
  public static extern IntPtr new_SinkingFundStatus__SWIG_1(double jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_SinkingFundStatus__SWIG_2")]
  public static extern IntPtr new_SinkingFundStatus__SWIG_2();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_SinkingFundStatus")]
  public static extern void delete_SinkingFundStatus(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_InterestRateScenario__SWIG_1")]
  public static extern IntPtr new_InterestRateScenario__SWIG_1(double jarg1, HandleRef jarg2, int jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_InterestRateScenario__SWIG_2")]
  public static extern IntPtr new_InterestRateScenario__SWIG_2(double jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_InterestRateScenario")]
  public static extern void delete_InterestRateScenario(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateScenario_AddTransition")]
  public static extern bool InterestRateScenario_AddTransition(HandleRef jarg1, double jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateScenario_SetEfficiencyThreshold")]
  public static extern bool InterestRateScenario_SetEfficiencyThreshold(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateScenario_SetReinvestStandard")]
  public static extern void InterestRateScenario_SetReinvestStandard(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateScenario_SetReinvestAtZeroOAS")]
  public static extern void InterestRateScenario_SetReinvestAtZeroOAS(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateScenario_SetReinvestAtFixed")]
  public static extern void InterestRateScenario_SetReinvestAtFixed(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_0")]
  public static extern IntPtr new_Date__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_1")]
  public static extern IntPtr new_Date__SWIG_1(int jarg1, int jarg2, int jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_2")]
  public static extern IntPtr new_Date__SWIG_2(string jarg1, int jarg2, char jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_3")]
  public static extern IntPtr new_Date__SWIG_3(string jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_4")]
  public static extern IntPtr new_Date__SWIG_4(int jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_5")]
  public static extern IntPtr new_Date__SWIG_5();

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_Date__SWIG_6")]
  public static extern IntPtr new_Date__SWIG_6(HandleRef jarg1, double jarg2, int jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_Good")]
  public static extern bool Date_Good(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_Libdate")]
  public static extern int Date_Libdate(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_DayOf")]
  public static extern int Date_DayOf(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_MonthOf")]
  public static extern int Date_MonthOf(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_YearOf")]
  public static extern int Date_YearOf(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_YearsTo")]
  public static extern double Date_YearsTo(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_DaysTo")]
  public static extern int Date_DaysTo(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_PlusEqual")]
  public static extern IntPtr Date_PlusEqual(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_MinusEqual")]
  public static extern IntPtr Date_MinusEqual(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_IsLT")]
  public static extern bool Date_IsLT(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_IsLE")]
  public static extern bool Date_IsLE(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_IsEq")]
  public static extern bool Date_IsEq(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_IsGE")]
  public static extern bool Date_IsGE(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Date_IsGT")]
  public static extern bool Date_IsGT(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_Date")]
  public static extern void delete_Date(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTax__SWIG_1")]
  public static extern IntPtr new_ValueAfterTax__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTax__SWIG_2")]
  public static extern IntPtr new_ValueAfterTax__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTax__SWIG_3")]
  public static extern IntPtr new_ValueAfterTax__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTax__SWIG_4")]
  public static extern IntPtr new_ValueAfterTax__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_ValueAfterTax")]
  public static extern void delete_ValueAfterTax(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Reset__SWIG_0")]
  public static extern int ValueAfterTax_Reset__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Reset__SWIG_1")]
  public static extern int ValueAfterTax_Reset__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Reset__SWIG_2")]
  public static extern int ValueAfterTax_Reset__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Reset__SWIG_3")]
  public static extern int ValueAfterTax_Reset__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_SetTaxRates")]
  public static extern bool ValueAfterTax_SetTaxRates(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_SetFriction")]
  public static extern bool ValueAfterTax_SetFriction(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_DeminimisSmoothing")]
  public static extern bool ValueAfterTax_DeminimisSmoothing(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_SetYieldMethod")]
  public static extern bool ValueAfterTax_SetYieldMethod(HandleRef jarg1, int jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_GetYieldMethod")]
  public static extern int ValueAfterTax_GetYieldMethod(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_YieldToCall")]
  public static extern double ValueAfterTax_YieldToCall(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_YieldToPut")]
  public static extern double ValueAfterTax_YieldToPut(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_YieldToMaturity")]
  public static extern double ValueAfterTax_YieldToMaturity(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_SaleTax")]
  public static extern double ValueAfterTax_SaleTax(HandleRef jarg1, HandleRef jarg2, double jarg3, HandleRef jarg4, double jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Accrued")]
  public static extern double ValueAfterTax_Accrued(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_DeminimisPrice")]
  public static extern double ValueAfterTax_DeminimisPrice(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_IssueYield")]
  public static extern double ValueAfterTax_IssueYield(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Price__SWIG_0")]
  public static extern double ValueAfterTax_Price__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_OptionValue")]
  public static extern double ValueAfterTax_OptionValue(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_FastPrice")]
  public static extern double ValueAfterTax_FastPrice(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_OAS")]
  public static extern double ValueAfterTax_OAS(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_Price__SWIG_1")]
  public static extern double ValueAfterTax_Price__SWIG_1(HandleRef jarg1, double jarg2, HandleRef jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_EffectiveDuration__SWIG_0")]
  public static extern IntPtr ValueAfterTax_EffectiveDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_EffectiveDuration__SWIG_1")]
  public static extern IntPtr ValueAfterTax_EffectiveDuration__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_UpDuration__SWIG_0")]
  public static extern double ValueAfterTax_UpDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_UpDuration__SWIG_1")]
  public static extern double ValueAfterTax_UpDuration__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_DownDuration__SWIG_0")]
  public static extern double ValueAfterTax_DownDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_DownDuration__SWIG_1")]
  public static extern double ValueAfterTax_DownDuration__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_KeyRateDuration__SWIG_0")]
  public static extern IntPtr ValueAfterTax_KeyRateDuration__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_KeyRateDuration__SWIG_1")]
  public static extern IntPtr ValueAfterTax_KeyRateDuration__SWIG_1(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_KeyRateDuration__SWIG_2")]
  public static extern IntPtr ValueAfterTax_KeyRateDuration__SWIG_2(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTaxSignal__SWIG_0")]
  public static extern IntPtr new_ValueAfterTaxSignal__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTaxSignal__SWIG_1")]
  public static extern IntPtr new_ValueAfterTaxSignal__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTaxSignal__SWIG_2")]
  public static extern IntPtr new_ValueAfterTaxSignal__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_new_ValueAfterTaxSignal__SWIG_3")]
  public static extern IntPtr new_ValueAfterTaxSignal__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_UseSlowHoldersBasis")]
  public static extern bool ValueAfterTaxSignal_UseSlowHoldersBasis(HandleRef jarg1, bool jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_TaxOption__SWIG_0")]
  public static extern double ValueAfterTaxSignal_TaxOption__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_TaxArbitrage__SWIG_0")]
  public static extern double ValueAfterTaxSignal_TaxArbitrage__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_TaxOption__SWIG_1")]
  public static extern double ValueAfterTaxSignal_TaxOption__SWIG_1(HandleRef jarg1, double jarg2, HandleRef jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_TaxArbitrage__SWIG_1")]
  public static extern double ValueAfterTaxSignal_TaxArbitrage__SWIG_1(HandleRef jarg1, double jarg2, HandleRef jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_BenefitImmediate")]
  public static extern double ValueAfterTaxSignal_BenefitImmediate(HandleRef jarg1, double jarg2, HandleRef jarg3, double jarg4);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_delete_ValueAfterTaxSignal")]
  public static extern void delete_ValueAfterTaxSignal(HandleRef jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Initialization_SWIGUpcast")]
  public static extern IntPtr Initialization_SWIGUpcast(IntPtr jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_InterestRateModel_SWIGUpcast")]
  public static extern IntPtr InterestRateModel_SWIGUpcast(IntPtr jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Bond_SWIGUpcast")]
  public static extern IntPtr Bond_SWIGUpcast(IntPtr jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_Value_SWIGUpcast")]
  public static extern IntPtr Value_SWIGUpcast(IntPtr jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTax_SWIGUpcast")]
  public static extern IntPtr ValueAfterTax_SWIGUpcast(IntPtr jarg1);

  [DllImport("bondoas_csharp_wrap", EntryPoint="CSharp_ValueAfterTaxSignal_SWIGUpcast")]
  public static extern IntPtr ValueAfterTaxSignal_SWIGUpcast(IntPtr jarg1);
}

}
