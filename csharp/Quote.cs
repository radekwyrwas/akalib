/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace AndrewKalotayAssociates {

using System;
using System.Runtime.InteropServices;

public class Quote : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Quote(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Quote obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Quote() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AkaApiPINVOKE.delete_Quote(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public double quote {
    set {
      AkaApiPINVOKE.Quote_quote_set(swigCPtr, value);
    } 
    get {
      double ret = AkaApiPINVOKE.Quote_quote_get(swigCPtr);
      return ret;
    } 
  }

  public Quote.QuoteType quotetype {
    set {
      AkaApiPINVOKE.Quote_quotetype_set(swigCPtr, (int)value);
    } 
    get {
      Quote.QuoteType ret = (Quote.QuoteType)AkaApiPINVOKE.Quote_quotetype_get(swigCPtr);
      return ret;
    } 
  }

  public Quote(double q, Quote.QuoteType qt) : this(AkaApiPINVOKE.new_Quote(q, (int)qt), true) {
  }

  public enum QuoteType {
    OAS,
    PRICE,
    YTM,
    YTC,
    YTP
  }

}

}
