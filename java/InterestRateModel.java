/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.kalotay.akalib;

public class InterestRateModel extends Status {
  private long swigCPtr;

  protected InterestRateModel(long cPtr, boolean cMemoryOwn) {
    super(AkaApiJNI.InterestRateModel_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(InterestRateModel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AkaApiJNI.delete_InterestRateModel(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public InterestRateModel(InterestRateModel.INPUTTYPE arg0) {
    this(AkaApiJNI.new_InterestRateModel__SWIG_0(arg0.swigValue()), true);
  }

  public InterestRateModel() {
    this(AkaApiJNI.new_InterestRateModel__SWIG_1(), true);
  }

  public InterestRateModel(InterestRateModel arg0, double forward_period) {
    this(AkaApiJNI.new_InterestRateModel__SWIG_2(InterestRateModel.getCPtr(arg0), arg0, forward_period), true);
  }

  public InterestRateModel(InterestRateModel arg0) {
    this(AkaApiJNI.new_InterestRateModel__SWIG_3(InterestRateModel.getCPtr(arg0), arg0), true);
  }

  public boolean SetRate(double year, double rate) {
    return AkaApiJNI.InterestRateModel_SetRate(swigCPtr, this, year, rate);
  }

  public boolean SetFactor(double year, double factor) {
    return AkaApiJNI.InterestRateModel_SetFactor(swigCPtr, this, year, factor);
  }

  public boolean SetZeroRate(double year, double zerorate) {
    return AkaApiJNI.InterestRateModel_SetZeroRate(swigCPtr, this, year, zerorate);
  }

  public void RemovePoint(double year) {
    AkaApiJNI.InterestRateModel_RemovePoint(swigCPtr, this, year);
  }

  public void RemoveAllPoints() {
    AkaApiJNI.InterestRateModel_RemoveAllPoints(swigCPtr, this);
  }

  public double GetRate(double year) {
    return AkaApiJNI.InterestRateModel_GetRate(swigCPtr, this, year);
  }

  public double GetFactor(double year) {
    return AkaApiJNI.InterestRateModel_GetFactor(swigCPtr, this, year);
  }

  public static double ZeroToFactor(double rate, double year) {
    return AkaApiJNI.InterestRateModel_ZeroToFactor(rate, year);
  }

  public static double FactorToZero(double discount, double year) {
    return AkaApiJNI.InterestRateModel_FactorToZero(discount, year);
  }

  public boolean SetVolatility(double arg0) {
    return AkaApiJNI.InterestRateModel_SetVolatility(swigCPtr, this, arg0);
  }

  public double GetVolatility() {
    return AkaApiJNI.InterestRateModel_GetVolatility__SWIG_0(swigCPtr, this);
  }

  public boolean SetAlpha(double arg0) {
    return AkaApiJNI.InterestRateModel_SetAlpha(swigCPtr, this, arg0);
  }

  public double GetAlpha() {
    return AkaApiJNI.InterestRateModel_GetAlpha(swigCPtr, this);
  }

  public boolean SetLongVolatility(double arg0) {
    return AkaApiJNI.InterestRateModel_SetLongVolatility(swigCPtr, this, arg0);
  }

  public double GetLongVolatility() {
    return AkaApiJNI.InterestRateModel_GetLongVolatility(swigCPtr, this);
  }

  public InterestRateModel.INPUTTYPE GetInputType() {
    return InterestRateModel.INPUTTYPE.swigToEnum(AkaApiJNI.InterestRateModel_GetInputType(swigCPtr, this));
  }

  public boolean IsParCurve() {
    return AkaApiJNI.InterestRateModel_IsParCurve(swigCPtr, this);
  }

  public int Solve() {
    return AkaApiJNI.InterestRateModel_Solve(swigCPtr, this);
  }

  public double Discount(double value, double fromtime, double oas) {
    return AkaApiJNI.InterestRateModel_Discount__SWIG_0(swigCPtr, this, value, fromtime, oas);
  }

  public double Discount(double value, double fromtime) {
    return AkaApiJNI.InterestRateModel_Discount__SWIG_1(swigCPtr, this, value, fromtime);
  }

  public double GetVolatility(double fromtime) {
    return AkaApiJNI.InterestRateModel_GetVolatility__SWIG_1(swigCPtr, this, fromtime);
  }

  public void EnableCompatibility() {
    AkaApiJNI.InterestRateModel_EnableCompatibility(swigCPtr, this);
  }

  public final static class INPUTTYPE {
    public final static InterestRateModel.INPUTTYPE FACTORCURVE = new InterestRateModel.INPUTTYPE("FACTORCURVE");
    public final static InterestRateModel.INPUTTYPE PARCURVE = new InterestRateModel.INPUTTYPE("PARCURVE");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static INPUTTYPE swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + INPUTTYPE.class + " with value " + swigValue);
    }

    private INPUTTYPE(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private INPUTTYPE(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private INPUTTYPE(String swigName, INPUTTYPE swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static INPUTTYPE[] swigValues = { FACTORCURVE, PARCURVE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
