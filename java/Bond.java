/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.kalotay.akalib;

public class Bond extends Status {
  private long swigCPtr;

  protected Bond(long cPtr, boolean cMemoryOwn) {
    super(AkaApiJNI.Bond_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Bond obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AkaApiJNI.delete_Bond(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public Bond(String name, Date idate, Date mdate, double coupon) {
    this(AkaApiJNI.new_Bond__SWIG_0(name, Date.getCPtr(idate), idate, Date.getCPtr(mdate), mdate, coupon), true);
  }

  public Bond(Bond arg0) {
    this(AkaApiJNI.new_Bond__SWIG_1(Bond.getCPtr(arg0), arg0), true);
  }

  public boolean SetDaycount(Bond.DAYCOUNT arg0) {
    return AkaApiJNI.Bond_SetDaycount(swigCPtr, this, arg0.swigValue());
  }

  public boolean SetFrequency(Bond.FREQUENCY arg0) {
    return AkaApiJNI.Bond_SetFrequency(swigCPtr, this, arg0.swigValue());
  }

  public boolean SetRedemptionPrice(double arg0) {
    return AkaApiJNI.Bond_SetRedemptionPrice(swigCPtr, this, arg0);
  }

  public boolean SetIssuePrice(double arg0) {
    return AkaApiJNI.Bond_SetIssuePrice(swigCPtr, this, arg0);
  }

  public boolean SetFaceAmount(long arg0) {
    return AkaApiJNI.Bond_SetFaceAmount__SWIG_0(swigCPtr, this, arg0);
  }

  public boolean SetFaceAmount(double arg0) {
    return AkaApiJNI.Bond_SetFaceAmount__SWIG_1(swigCPtr, this, arg0);
  }

  public boolean SetFirstCoupon(Date arg0) {
    return AkaApiJNI.Bond_SetFirstCoupon(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public boolean SetLastCoupon(Date arg0) {
    return AkaApiJNI.Bond_SetLastCoupon(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public boolean SetPayDayEndOfMonth(boolean arg0) {
    return AkaApiJNI.Bond_SetPayDayEndOfMonth(swigCPtr, this, arg0);
  }

  public boolean SetPayDay(int arg0) {
    return AkaApiJNI.Bond_SetPayDay(swigCPtr, this, arg0);
  }

  public boolean SetYieldMethod(Bond.YIELD_METHOD arg0) {
    return AkaApiJNI.Bond_SetYieldMethod(swigCPtr, this, arg0.swigValue());
  }

  public boolean SetCall(Date arg0, double px) {
    return AkaApiJNI.Bond_SetCall(swigCPtr, this, Date.getCPtr(arg0), arg0, px);
  }

  public boolean SetPut(Date arg0, double px) {
    return AkaApiJNI.Bond_SetPut(swigCPtr, this, Date.getCPtr(arg0), arg0, px);
  }

  public boolean SetSink(Date arg0, double amount, double px) {
    return AkaApiJNI.Bond_SetSink__SWIG_0(swigCPtr, this, Date.getCPtr(arg0), arg0, amount, px);
  }

  public boolean SetSink(Date arg0, double amount) {
    return AkaApiJNI.Bond_SetSink__SWIG_1(swigCPtr, this, Date.getCPtr(arg0), arg0, amount);
  }

  public boolean SetCoupon(Date arg0, double arg1) {
    return AkaApiJNI.Bond_SetCoupon(swigCPtr, this, Date.getCPtr(arg0), arg0, arg1);
  }

  public boolean SetXCouponDays(int arg0) {
    return AkaApiJNI.Bond_SetXCouponDays(swigCPtr, this, arg0);
  }

  public void RemoveCall(Date arg0) {
    AkaApiJNI.Bond_RemoveCall(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public void RemovePut(Date arg0) {
    AkaApiJNI.Bond_RemovePut(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public void RemoveSink(Date arg0) {
    AkaApiJNI.Bond_RemoveSink(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public void RemoveCoupon(Date arg0) {
    AkaApiJNI.Bond_RemoveCoupon(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public boolean SetNoticePeriod(int arg0) {
    return AkaApiJNI.Bond_SetNoticePeriod(swigCPtr, this, arg0);
  }

  public boolean SetOptionDelay(int d) {
    return AkaApiJNI.Bond_SetOptionDelay(swigCPtr, this, d);
  }

  public boolean SetCallAmerican(boolean is_american) {
    return AkaApiJNI.Bond_SetCallAmerican(swigCPtr, this, is_american);
  }

  public boolean SetPutAmerican(boolean is_american) {
    return AkaApiJNI.Bond_SetPutAmerican(swigCPtr, this, is_american);
  }

  public boolean SetSinkOption(boolean allow_delivery, double acceleration, Bond.ALLOCATION allocation) {
    return AkaApiJNI.Bond_SetSinkOption(swigCPtr, this, allow_delivery, acceleration, allocation.swigValue());
  }

  public boolean SetCouponSchedulePeriod(boolean at_begin) {
    return AkaApiJNI.Bond_SetCouponSchedulePeriod(swigCPtr, this, at_begin);
  }

  public Bond.NotifyBehavior SetNotifyBehavior(Bond.NotifyBehavior arg0) {
    return Bond.NotifyBehavior.swigToEnum(AkaApiJNI.Bond_SetNotifyBehavior(swigCPtr, this, arg0.swigValue()));
  }

  public boolean SetBusinessDayWeekends(boolean arg0) {
    return AkaApiJNI.Bond_SetBusinessDayWeekends(swigCPtr, this, arg0);
  }

  public boolean SetHoliday(Date arg0) {
    return AkaApiJNI.Bond_SetHoliday(swigCPtr, this, Date.getCPtr(arg0), arg0);
  }

  public boolean SetHolidays(Date arg0, int arg1) {
    return AkaApiJNI.Bond_SetHolidays(swigCPtr, this, Date.getCPtr(arg0), arg0, arg1);
  }

  public boolean ClearHolidays() {
    return AkaApiJNI.Bond_ClearHolidays(swigCPtr, this);
  }

  public boolean SetMortgage() {
    return AkaApiJNI.Bond_SetMortgage(swigCPtr, this);
  }

  public boolean SetAmortization(double years) {
    return AkaApiJNI.Bond_SetAmortization(swigCPtr, this, years);
  }

  public boolean SetMortgageRefinanceCost(double arg0) {
    return AkaApiJNI.Bond_SetMortgageRefinanceCost(swigCPtr, this, arg0);
  }

  public void ClearMortgage() {
    AkaApiJNI.Bond_ClearMortgage(swigCPtr, this);
  }

  public String GetName() {
    return AkaApiJNI.Bond_GetName(swigCPtr, this);
  }

  public Date GetInitialDate() {
    return new Date(AkaApiJNI.Bond_GetInitialDate(swigCPtr, this), true);
  }

  public Date GetMaturityDate() {
    return new Date(AkaApiJNI.Bond_GetMaturityDate(swigCPtr, this), true);
  }

  public double GetCoupon() {
    return AkaApiJNI.Bond_GetCoupon(swigCPtr, this);
  }

  public Bond.DAYCOUNT GetDaycount() {
    return Bond.DAYCOUNT.swigToEnum(AkaApiJNI.Bond_GetDaycount(swigCPtr, this));
  }

  public Bond.FREQUENCY GetFrequency() {
    return Bond.FREQUENCY.swigToEnum(AkaApiJNI.Bond_GetFrequency(swigCPtr, this));
  }

  public double GetFaceAmount() {
    return AkaApiJNI.Bond_GetFaceAmount(swigCPtr, this);
  }

  public final static class DAYCOUNT {
    public final static Bond.DAYCOUNT DC_30_360 = new Bond.DAYCOUNT("DC_30_360");
    public final static Bond.DAYCOUNT DC_30E_360 = new Bond.DAYCOUNT("DC_30E_360");
    public final static Bond.DAYCOUNT DC_ACT_360 = new Bond.DAYCOUNT("DC_ACT_360");
    public final static Bond.DAYCOUNT DC_ACT_365 = new Bond.DAYCOUNT("DC_ACT_365");
    public final static Bond.DAYCOUNT DC_ACT_ACT = new Bond.DAYCOUNT("DC_ACT_ACT");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static DAYCOUNT swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + DAYCOUNT.class + " with value " + swigValue);
    }

    private DAYCOUNT(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private DAYCOUNT(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private DAYCOUNT(String swigName, DAYCOUNT swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static DAYCOUNT[] swigValues = { DC_30_360, DC_30E_360, DC_ACT_360, DC_ACT_365, DC_ACT_ACT };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class FREQUENCY {
    public final static Bond.FREQUENCY FREQ_INT_AT_MATURITY = new Bond.FREQUENCY("FREQ_INT_AT_MATURITY");
    public final static Bond.FREQUENCY FREQ_ANNUAL = new Bond.FREQUENCY("FREQ_ANNUAL");
    public final static Bond.FREQUENCY FREQ_SEMIANNUAL = new Bond.FREQUENCY("FREQ_SEMIANNUAL");
    public final static Bond.FREQUENCY FREQ_QUARTERLY = new Bond.FREQUENCY("FREQ_QUARTERLY");
    public final static Bond.FREQUENCY FREQ_MONTHLY = new Bond.FREQUENCY("FREQ_MONTHLY");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static FREQUENCY swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + FREQUENCY.class + " with value " + swigValue);
    }

    private FREQUENCY(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private FREQUENCY(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private FREQUENCY(String swigName, FREQUENCY swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static FREQUENCY[] swigValues = { FREQ_INT_AT_MATURITY, FREQ_ANNUAL, FREQ_SEMIANNUAL, FREQ_QUARTERLY, FREQ_MONTHLY };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class YIELD_METHOD {
    public final static Bond.YIELD_METHOD YLD_BEY = new Bond.YIELD_METHOD("YLD_BEY", AkaApiJNI.Bond_YLD_BEY_get());
    public final static Bond.YIELD_METHOD YLD_SIMPLE_LAST_PERIOD = new Bond.YIELD_METHOD("YLD_SIMPLE_LAST_PERIOD");
    public final static Bond.YIELD_METHOD YLD_SIMPLE_LAST_YEAR = new Bond.YIELD_METHOD("YLD_SIMPLE_LAST_YEAR");
    public final static Bond.YIELD_METHOD YLD_MUNI = new Bond.YIELD_METHOD("YLD_MUNI");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static YIELD_METHOD swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + YIELD_METHOD.class + " with value " + swigValue);
    }

    private YIELD_METHOD(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private YIELD_METHOD(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private YIELD_METHOD(String swigName, YIELD_METHOD swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static YIELD_METHOD[] swigValues = { YLD_BEY, YLD_SIMPLE_LAST_PERIOD, YLD_SIMPLE_LAST_YEAR, YLD_MUNI };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class ALLOCATION {
    public final static Bond.ALLOCATION ALLOC_PRORATA = new Bond.ALLOCATION("ALLOC_PRORATA");
    public final static Bond.ALLOCATION ALLOC_FRONT = new Bond.ALLOCATION("ALLOC_FRONT");
    public final static Bond.ALLOCATION ALLOC_BACK = new Bond.ALLOCATION("ALLOC_BACK");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ALLOCATION swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ALLOCATION.class + " with value " + swigValue);
    }

    private ALLOCATION(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ALLOCATION(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ALLOCATION(String swigName, ALLOCATION swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ALLOCATION[] swigValues = { ALLOC_PRORATA, ALLOC_FRONT, ALLOC_BACK };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class NotifyBehavior {
    public final static Bond.NotifyBehavior BusinessDaysExtend = new Bond.NotifyBehavior("BusinessDaysExtend");
    public final static Bond.NotifyBehavior BusinessDaysOnly = new Bond.NotifyBehavior("BusinessDaysOnly");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static NotifyBehavior swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + NotifyBehavior.class + " with value " + swigValue);
    }

    private NotifyBehavior(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private NotifyBehavior(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private NotifyBehavior(String swigName, NotifyBehavior swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static NotifyBehavior[] swigValues = { BusinessDaysExtend, BusinessDaysOnly };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
