/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.kalotay.akalib;

public class Date {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Date(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Date obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AkaApiJNI.delete_Date(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Date(int arg0, int arg1, int arg2, Date.ENTRY arg3) {
    this(AkaApiJNI.new_Date__SWIG_0(arg0, arg1, arg2, arg3.swigValue()), true);
  }

  public Date(int arg0, int arg1, int arg2) {
    this(AkaApiJNI.new_Date__SWIG_1(arg0, arg1, arg2), true);
  }

  public Date(String arg0, Date.ENTRY arg1, char sep) {
    this(AkaApiJNI.new_Date__SWIG_2(arg0, arg1.swigValue(), sep), true);
  }

  public Date(String arg0, Date.ENTRY arg1) {
    this(AkaApiJNI.new_Date__SWIG_3(arg0, arg1.swigValue()), true);
  }

  public Date(int arg0) {
    this(AkaApiJNI.new_Date__SWIG_4(arg0), true);
  }

  public Date() {
    this(AkaApiJNI.new_Date__SWIG_5(), true);
  }

  public Date(Date arg0, double yrs, Bond.DAYCOUNT arg2) {
    this(AkaApiJNI.new_Date__SWIG_6(Date.getCPtr(arg0), arg0, yrs, arg2.swigValue()), true);
  }

  public boolean Good() {
    return AkaApiJNI.Date_Good(swigCPtr, this);
  }

  public int Libdate() {
    return AkaApiJNI.Date_Libdate(swigCPtr, this);
  }

  public int DayOf() {
    return AkaApiJNI.Date_DayOf(swigCPtr, this);
  }

  public int MonthOf() {
    return AkaApiJNI.Date_MonthOf(swigCPtr, this);
  }

  public int YearOf() {
    return AkaApiJNI.Date_YearOf(swigCPtr, this);
  }

  public double YearsTo(Date other, Bond.DAYCOUNT arg1) {
    return AkaApiJNI.Date_YearsTo(swigCPtr, this, Date.getCPtr(other), other, arg1.swigValue());
  }

  public int DaysTo(Date other) {
    return AkaApiJNI.Date_DaysTo(swigCPtr, this, Date.getCPtr(other), other);
  }

  public Date PlusEqual(int arg0) {
    return new Date(AkaApiJNI.Date_PlusEqual(swigCPtr, this, arg0), false);
  }

  public Date MinusEqual(int days) {
    return new Date(AkaApiJNI.Date_MinusEqual(swigCPtr, this, days), false);
  }

  public boolean IsLT(Date other) {
    return AkaApiJNI.Date_IsLT(swigCPtr, this, Date.getCPtr(other), other);
  }

  public boolean IsLE(Date other) {
    return AkaApiJNI.Date_IsLE(swigCPtr, this, Date.getCPtr(other), other);
  }

  public boolean IsEq(Date other) {
    return AkaApiJNI.Date_IsEq(swigCPtr, this, Date.getCPtr(other), other);
  }

  public boolean IsGE(Date other) {
    return AkaApiJNI.Date_IsGE(swigCPtr, this, Date.getCPtr(other), other);
  }

  public boolean IsGT(Date other) {
    return AkaApiJNI.Date_IsGT(swigCPtr, this, Date.getCPtr(other), other);
  }

  public final static class ENTRY {
    public final static Date.ENTRY YMD = new Date.ENTRY("YMD");
    public final static Date.ENTRY MDY = new Date.ENTRY("MDY");
    public final static Date.ENTRY DMY = new Date.ENTRY("DMY");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ENTRY swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ENTRY.class + " with value " + swigValue);
    }

    private ENTRY(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ENTRY(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ENTRY(String swigName, ENTRY swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ENTRY[] swigValues = { YMD, MDY, DMY };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
